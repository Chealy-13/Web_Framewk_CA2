@rendermode InteractiveServer

@page "/weather"
@using Web_Framewk_CA2.Components.Model
@inject Web_Framewk_CA2.Components.Services.WeatherService WeatherService
@inject HttpClient Http
<h3>Search Weather</h3>

<input @bind="City" placeholder="Enter city name" />
<button @onclick="FetchWeather">Search</button>

@if (IsLoading)
{
    <p>Loading...</p>
}
else if (CurrentWeather != null)
{
    <h4>Weather in @CurrentWeather.Name</h4>
    <p>Temperature: @CurrentWeather.Main.Temp °C</p>
    <p>Feels Like: @CurrentWeather.Main.Feels_Like °C</p>
    <p>Humidity: @CurrentWeather.Main.Humidity%</p>
    <p>Description: @CurrentWeather.Weather[0].Description</p>
    <br />
    <a href="/news">Click here to view related news</a>
}
else if (ShowError)
{
    <p style="color:red;">Unable to fetch weather. Please check the city name.</p>
}
   
@code {
    private string City { get; set; }
    private WeatherData CurrentWeather { get; set; }
    private bool IsLoading { get; set; } = false;
    private bool ShowError { get; set; } = false;

    private async Task FetchWeather()
    {
        if (string.IsNullOrWhiteSpace(City))
        {
            ShowError = true;
            return;
        }
        IsLoading = true;
        ShowError = false;

        try
        {
            CurrentWeather = await WeatherService.GetWeatherAsync(City);
            if (CurrentWeather == null)
            {
                ShowError = true;
            }
        }
        catch
        {
            ShowError = true;
        }

        IsLoading = false;

     
    }
}
